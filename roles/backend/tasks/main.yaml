  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name:  "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense
   
  - name: import tasks from common role
    ansible.builtin.import_role:
     name: common
     tasks_from: app-pre-req

  # - name: create app directory
  #   ansible.builtin.file:
  #     path: /app
  #     state: directory

  # - name: download the backend code
  #   ansible.builtin.get_url:
  #     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /tmp/backend.zip

  # - name: extract the code
  #   ansible.builtin.unarchive:
  #     src: /tmp/backend.zip #by default ansible thinks this is in ansible server
  #     dest: /app
  #     remote_src: yes

  - name: install dependencies 
    ansible.builtin.command: npm install  # here it means we're installing the dependency in package.json in nodejs loaction.thats y we 'have to change the dir where the package.json is  present.in our case its in app directory.
    args:
      chdir: /app

  - name: copy backend service  #copy works only for files without variables thats y "ansible.builtin.copy:" module doesn't work we have to use template module.
    #ansible.builtin.copy: 
    ansible.builtin.template:       
     src: backend.service.j2
     dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

#if we run other cmnds in expense doc  backend. it will throw errr since we didn't import the data in the schema to mysqldb. so before running,try to import data to mysqldb by/cnnecting to mysql server.with the below task/cmnd.reffer the expense doc .
 # thatss y we're writing the below task to avoid error.

  - name: import mysql data
    community.mysql.mysql_db:           
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend
